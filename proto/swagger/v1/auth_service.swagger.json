{
  "swagger": "2.0",
  "info": {
    "title": "v1/auth_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/login": {
      "post": {
        "operationId": "AuthService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/logout": {
      "post": {
        "operationId": "AuthService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogoutRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "operationId": "AuthService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of users to return. The service may return fewer than\nthis value.\nIf unspecified, at most 50 users will be returned.\nThe maximum value is 1000; values above 1000 will be coerced to 1000.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListUsers` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListUsers` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showDeleted",
            "description": "Show deleted users if specified.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "AuthService"
        ]
      },
      "post": {
        "operationId": "AuthService_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user",
            "description": "The user to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1User",
              "required": [
                "user"
              ]
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "operationId": "AuthService_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the user to retrieve.\nFormat: users/{user}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          }
        ],
        "tags": [
          "AuthService"
        ]
      },
      "delete": {
        "operationId": "AuthService_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the user to delete.\nFormat: users/{user}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/{name}:undelete": {
      "post": {
        "operationId": "AuthService_UndeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the deleted user.\nFormat: users/{user}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/{user.name}": {
      "patch": {
        "operationId": "AuthService_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "user.name",
            "description": "The name of the user.\nFormat: users/{user}. {user} is a system-generated unique ID.",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+"
          },
          {
            "name": "user",
            "description": "The user to update.\n\nThe user's `name` field is used to identify the user to update.\nFormat: users/{user}",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "state": {
                  "$ref": "#/definitions/v1State"
                },
                "email": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "userType": {
                  "$ref": "#/definitions/v1UserType"
                },
                "userRole": {
                  "$ref": "#/definitions/v1UserRole",
                  "description": "The user role will not be respected in the create user request, because the role is controlled by workspace owner."
                },
                "password": {
                  "type": "string"
                },
                "serviceKey": {
                  "type": "string"
                }
              },
              "description": "The user's `name` field is used to identify the user to update.\nFormat: users/{user}",
              "title": "The user to update."
            }
          },
          {
            "name": "updateMask",
            "description": "The list of fields to update.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1IdentityProviderContext": {
      "type": "object",
      "properties": {
        "oauth2Context": {
          "$ref": "#/definitions/v1OAuth2IdentityProviderContext"
        },
        "oidcContext": {
          "$ref": "#/definitions/v1OIDCIdentityProviderContextx"
        }
      }
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          },
          "description": "The users from the specified request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "web": {
          "type": "boolean",
          "description": "If web is set, we will set access token, refresh token, and user to the cookie."
        },
        "idpName": {
          "type": "string",
          "title": "The name of the identity provider.\nFormat: idps/{idp}"
        },
        "context": {
          "$ref": "#/definitions/v1IdentityProviderContext",
          "description": "The context data is using to get the user information from identity provider."
        }
      },
      "required": [
        "idpName"
      ]
    },
    "v1LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v1LogoutRequest": {
      "type": "object"
    },
    "v1OAuth2IdentityProviderContext": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        }
      }
    },
    "v1OIDCIdentityProviderContextx": {
      "type": "object"
    },
    "v1State": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "ACTIVE",
        "DELETED"
      ],
      "default": "STATE_UNSPECIFIED"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the user.\nFormat: users/{user}. {user} is a system-generated unique ID.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/v1State"
        },
        "email": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "userType": {
          "$ref": "#/definitions/v1UserType"
        },
        "userRole": {
          "$ref": "#/definitions/v1UserRole",
          "description": "The user role will not be respected in the create user request, because the role is controlled by workspace owner."
        },
        "password": {
          "type": "string"
        },
        "serviceKey": {
          "type": "string"
        }
      }
    },
    "v1UserRole": {
      "type": "string",
      "enum": [
        "USER_ROLE_UNSPECIFIED",
        "OWNER",
        "DBA",
        "DEVELOPER"
      ],
      "default": "USER_ROLE_UNSPECIFIED"
    },
    "v1UserType": {
      "type": "string",
      "enum": [
        "USER_TYPE_UNSPECIFIED",
        "USER",
        "SYSTEM_BOT",
        "SERVICE_ACCOUNT"
      ],
      "default": "USER_TYPE_UNSPECIFIED"
    }
  }
}
