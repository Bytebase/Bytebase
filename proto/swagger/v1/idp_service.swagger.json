{
  "swagger": "2.0",
  "info": {
    "title": "v1/idp_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "IdentityProviderService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/idps": {
      "get": {
        "operationId": "IdentityProviderService_ListIdentityProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListIdentityProvidersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of identity providers to return. The service may return fewer than\nthis value.\nIf unspecified, at most 50 will be returned.\nThe maximum value is 1000; values above 1000 will be coerced to 1000.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "A page token, received from a previous `ListIdentityProviders` call.\nProvide this to retrieve the subsequent page.\n\nWhen paginating, all other parameters provided to `ListIdentityProviders` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "showDeleted",
            "description": "Show deleted identity providers if specified.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      },
      "post": {
        "operationId": "IdentityProviderService_CreateIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdentityProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identityProvider",
            "description": "The identity provider to create.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdentityProvider",
              "required": [
                "identityProvider"
              ]
            }
          },
          {
            "name": "identityProviderId",
            "description": "The ID to use for the identity provider, which will become the final component of\nthe identity provider's resource name.\n\nThis value should be 4-63 characters, and valid characters\nare /[a-z][0-9]-/.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      }
    },
    "/v1/idps/*:test": {
      "post": {
        "operationId": "IdentityProviderService_TestIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TestIdentityProviderResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1TestIdentityProviderRequest"
            }
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      }
    },
    "/v1/{identityProvider.name}": {
      "patch": {
        "operationId": "IdentityProviderService_UpdateIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdentityProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "identityProvider.name",
            "description": "The name of the identity provider.\nFormat: idps/{identity_provider}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "idps/[^/]+"
          },
          {
            "name": "identityProvider",
            "description": "The identity provider to update.\n\nThe identity provider's `name` field is used to identify the identity provider to update.\nFormat: idps/{identity_provider}",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "uid": {
                  "type": "string",
                  "description": "The system-assigned, unique identifier for a resource.",
                  "readOnly": true
                },
                "state": {
                  "$ref": "#/definitions/v1State"
                },
                "title": {
                  "type": "string"
                },
                "domain": {
                  "type": "string"
                },
                "type": {
                  "$ref": "#/definitions/v1IdentityProviderType"
                },
                "config": {
                  "$ref": "#/definitions/v1IdentityProviderConfig"
                }
              },
              "description": "The identity provider's `name` field is used to identify the identity provider to update.\nFormat: idps/{identity_provider}",
              "title": "The identity provider to update."
            }
          },
          {
            "name": "updateMask",
            "description": "The list of fields to update.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      }
    },
    "/v1/{name}": {
      "get": {
        "operationId": "IdentityProviderService_GetIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdentityProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "idps/[^/]+"
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      },
      "delete": {
        "operationId": "IdentityProviderService_DeleteIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the identity provider to delete.\nFormat: idps/{identity_provider}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "idps/[^/]+"
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      }
    },
    "/v1/{name}:undelete": {
      "post": {
        "operationId": "IdentityProviderService_UndeleteIdentityProvider",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdentityProvider"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "The name of the deleted identity provider.\nFormat: idps/{identity_provider}",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "idps/[^/]+"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "tags": [
          "IdentityProviderService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1FieldMapping": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Identifier is the field name of the unique identifier in 3rd-party idp user info. Required."
        },
        "displayName": {
          "type": "string",
          "description": "DisplayName is the field name of display name in 3rd-party idp user info."
        },
        "email": {
          "type": "string",
          "description": "Email is the field name of primary email in 3rd-party idp user info."
        }
      },
      "description": "FieldMapping saves the field names from user info API of identity provider.\nAs we save all raw json string of user info response data into `principal.idp_user_info`,\nwe can extract the relevant data based with `FieldMapping`.\n\ne.g. For GitHub authenticated user API, it will return `login`, `name` and `email` in response. \nThen the identifier of FieldMapping will be `login`, display_name will be `name`,\nand email will be `email`.\nreference: https://docs.github.com/en/rest/users/users?apiVersion=2022-11-28#get-the-authenticated-user"
    },
    "v1IdentityProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the identity provider.\nFormat: idps/{identity_provider}"
        },
        "uid": {
          "type": "string",
          "description": "The system-assigned, unique identifier for a resource.",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/v1State"
        },
        "title": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1IdentityProviderType"
        },
        "config": {
          "$ref": "#/definitions/v1IdentityProviderConfig"
        }
      }
    },
    "v1IdentityProviderConfig": {
      "type": "object",
      "properties": {
        "oauth2Config": {
          "$ref": "#/definitions/v1OAuth2IdentityProviderConfig"
        },
        "oidcConfig": {
          "$ref": "#/definitions/v1OIDCIdentityProviderConfig"
        }
      }
    },
    "v1IdentityProviderType": {
      "type": "string",
      "enum": [
        "IDENTITY_PROVIDER_TYPE_UNSPECIFIED",
        "OAUTH2",
        "OIDC"
      ],
      "default": "IDENTITY_PROVIDER_TYPE_UNSPECIFIED"
    },
    "v1ListIdentityProvidersResponse": {
      "type": "object",
      "properties": {
        "identityProviders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IdentityProvider"
          },
          "description": "The identity providers from the specified request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page.\nIf this field is omitted, there are no subsequent pages."
        }
      }
    },
    "v1OAuth2IdentityProviderConfig": {
      "type": "object",
      "properties": {
        "authUrl": {
          "type": "string"
        },
        "tokenUrl": {
          "type": "string"
        },
        "userInfoUrl": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldMapping": {
          "$ref": "#/definitions/v1FieldMapping"
        }
      },
      "description": "OAuth2IdentityProviderConfig is the structure for OAuth2 identity provider config."
    },
    "v1OAuth2IdentityProviderTestRequestContext": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Authorize code from website."
        }
      }
    },
    "v1OIDCIdentityProviderConfig": {
      "type": "object",
      "properties": {
        "issuer": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fieldMapping": {
          "$ref": "#/definitions/v1FieldMapping"
        }
      },
      "description": "OIDCIdentityProviderConfig is the structure for OIDC identity provider config."
    },
    "v1State": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "ACTIVE",
        "DELETED"
      ],
      "default": "STATE_UNSPECIFIED"
    },
    "v1TestIdentityProviderRequest": {
      "type": "object",
      "properties": {
        "identityProvider": {
          "$ref": "#/definitions/v1IdentityProvider",
          "description": "The identity provider to test connection including uncreated."
        },
        "oauth2Context": {
          "$ref": "#/definitions/v1OAuth2IdentityProviderTestRequestContext"
        }
      }
    },
    "v1TestIdentityProviderResponse": {
      "type": "object"
    }
  }
}
