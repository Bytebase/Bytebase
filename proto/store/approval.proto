syntax = "proto3";

package bytebase.store;

option go_package = "generated-go/store";

// IssuePayloadApproval is a part of the payload of an issue.
// IssuePayloadApproval records the approval template used and the approval history.
message IssuePayloadApproval {
  ApprovalTemplate approval_template = 1;
  repeated ApprovalHistory history = 2;
}

enum ApprovalNodeStatus {
  APPROVAL_NODE_STATUS_UNSPECIFIED = 0;
  PENDING = 1;
  APPROVED = 2;
}

message ApprovalHistory {
  // The `uid` of the approval node.
  string node_uid = 1;
  // The new status.
  ApprovalNodeStatus status = 2;
  // The principal id of the approver.
  int32 creator_id = 3;
}

message ApprovalTemplate {
  ApprovalFlow flow = 1;
  string title = 2;
  string description = 3;
  int32 creator_id = 4;
}

message ApprovalFlow {
  repeated ApprovalStep steps = 2;
}

message ApprovalStep {
  // Type of the ApprovalStep
  // AND means every node must be approved to proceed.
  // OR means approving any node will proceed.
  enum Type {
    TYPE_UNSPECIFIED = 0;
    AND = 1;
    OR = 2;
  }
  Type type = 1;

  repeated ApprovalNode nodes = 2;
}

message ApprovalNode {
  // uid uniquely identifies a node in a flow.
  string uid = 1;

  // Type of the ApprovalNode.
  // type determines who should approve this node.
  // ROLE means the ApprovalNode can be approved by an user from our predefined user group.
  // See RoleValue below for the predefined user groups.
  enum Type {
    TYPE_UNSPECIFIED = 0;
    ROLE = 1;
  }
  Type type = 2;

  // RoleValue is used if ApprovalNode Type is ROLE
  // The predefined user groups are:
  // - WORKSPACE_OWNER
  // - DBA
  // - PROJECT_OWNER
  // - PROJECT_MEMBER
  enum RoleValue {
    ROLE_VALUE_UNSPECIFILED = 0;
    WORKSPACE_OWNER = 1;
    DBA = 2;
    PROJECT_OWNER = 3;
    PROJECT_MEMBER = 4;
  }
  oneof payload {
    RoleValue role_value = 3;
  }
}
