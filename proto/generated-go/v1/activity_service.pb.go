// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: v1/activity_service.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Activity_Type int32

const (
	Activity_TYPE_UNSPECIFIED Activity_Type = 0
	// Issue related activity types.
	//
	// TYPE_ISSUE_CREATE represents creating an issue.
	Activity_TYPE_ISSUE_CREATE Activity_Type = 1
	// TYPE_ISSUE_COMMENT_CREATE represents commenting on an issue.
	Activity_TYPE_ISSUE_COMMENT_CREATE Activity_Type = 2
	// TYPE_ISSUE_FIELD_UPDATE represents updating the issue field, likes title, description, assignee, etc.
	Activity_TYPE_ISSUE_FIELD_UPDATE Activity_Type = 3
	// TYPE_ISSUE_STATUS_UPDATE represents the issue status change, including OPEN, CLOSE, CANCEL fow now.
	Activity_TYPE_ISSUE_STATUS_UPDATE Activity_Type = 4
	// TYPE_ISSUE_PIPELINE_STAGE_STATUS_UPDATE represents the pipeline stage status change, including BEGIN, END for now.
	Activity_TYPE_ISSUE_PIPELINE_STAGE_STATUS_UPDATE Activity_Type = 5
	// TYPE_ISSUE_PIPELINE_TASK_STATUS_UPDATE represents the pipeline task status change, including PENDING, PENDING_APPROVAL, RUNNING, SUCCESS, FAILURE, CANCELED for now.
	Activity_TYPE_ISSUE_PIPELINE_TASK_STATUS_UPDATE Activity_Type = 6
	// TYPE_ISSUE_PIPELINE_TASK_FILE_COMMIT represents the VCS trigger to commit a file to update the task statement.
	Activity_TYPE_ISSUE_PIPELINE_TASK_FILE_COMMIT Activity_Type = 7
	// TYPE_ISSUE_PIPELINE_TASK_STATEMENT_UPDATE represents the manual update of the task statement.
	Activity_TYPE_ISSUE_PIPELINE_TASK_STATEMENT_UPDATE Activity_Type = 8
	// TYPE_ISSUE_PIPELINE_TASK_EARLIEST_ALLOWED_TIME_UPDATE represents the manual update of the task earliest allowed time.
	Activity_TYPE_ISSUE_PIPELINE_TASK_EARLIEST_ALLOWED_TIME_UPDATE Activity_Type = 9
	// Member related activity types.
	//
	// TYPE_MEMBER_CREATE represents creating a members.
	Activity_TYPE_MEMBER_CREATE Activity_Type = 10
	// TYPE_MEMBER_ROLE_UPDATE represents updating the member role, for example, from ADMIN to MEMBER.
	Activity_TYPE_MEMBER_ROLE_UPDATE Activity_Type = 11
	// TYPE_MEMBER_ACTIVATE represents activating a deactivated member.
	Activity_TYPE_MEMBER_ACTIVATE Activity_Type = 12
	// TYPE_MEMBER_DEACTIVATE represents deactivating an active member.
	Activity_TYPE_MEMBER_DEACTIVATE Activity_Type = 13
	// Project related activity types.
	//
	// TYPE_PROJECT_REPOSITORY_PUSH represents Bytebase receiving a push event from the project repository.
	Activity_TYPE_PROJECT_REPOSITORY_PUSH Activity_Type = 14
	// TYPE_PROJECT_DATABASE_TRANFER represents transfering the database from one project to another.
	Activity_TYPE_PROJECT_DATABASE_TRANSFER Activity_Type = 15
	// TYPE_PROJECT_MEMBER_CREATE represents adding a member to the project.
	Activity_TYPE_PROJECT_MEMBER_CREATE Activity_Type = 16
	// TYPE_PROJECT_MEMBER_DELETE represents removing a member from the project.
	Activity_TYPE_PROJECT_MEMBER_DELETE Activity_Type = 17
	// TYPE_PROJECT_MEMBER_ROLE_UPDATE represents updating the member role, for example, from ADMIN to MEMBER.
	Activity_TYPE_PROJECT_MEMBER_ROLE_UPDATE Activity_Type = 18
	// SQL Editor related activity types.
	// TYPE_SQL_EDITOR_QUERY represents executing query in SQL Editor.
	Activity_TYPE_SQL_EDITOR_QUERY Activity_Type = 19
	// Database related activity types.
	// TYPE_DATABASE_RECOVERY_PITR_DONE represents the database recovery to a point in time is done.
	Activity_TYPE_DATABASE_RECOVERY_PITR_DONE Activity_Type = 20
)

// Enum value maps for Activity_Type.
var (
	Activity_Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_ISSUE_CREATE",
		2:  "TYPE_ISSUE_COMMENT_CREATE",
		3:  "TYPE_ISSUE_FIELD_UPDATE",
		4:  "TYPE_ISSUE_STATUS_UPDATE",
		5:  "TYPE_ISSUE_PIPELINE_STAGE_STATUS_UPDATE",
		6:  "TYPE_ISSUE_PIPELINE_TASK_STATUS_UPDATE",
		7:  "TYPE_ISSUE_PIPELINE_TASK_FILE_COMMIT",
		8:  "TYPE_ISSUE_PIPELINE_TASK_STATEMENT_UPDATE",
		9:  "TYPE_ISSUE_PIPELINE_TASK_EARLIEST_ALLOWED_TIME_UPDATE",
		10: "TYPE_MEMBER_CREATE",
		11: "TYPE_MEMBER_ROLE_UPDATE",
		12: "TYPE_MEMBER_ACTIVATE",
		13: "TYPE_MEMBER_DEACTIVATE",
		14: "TYPE_PROJECT_REPOSITORY_PUSH",
		15: "TYPE_PROJECT_DATABASE_TRANSFER",
		16: "TYPE_PROJECT_MEMBER_CREATE",
		17: "TYPE_PROJECT_MEMBER_DELETE",
		18: "TYPE_PROJECT_MEMBER_ROLE_UPDATE",
		19: "TYPE_SQL_EDITOR_QUERY",
		20: "TYPE_DATABASE_RECOVERY_PITR_DONE",
	}
	Activity_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":                                      0,
		"TYPE_ISSUE_CREATE":                                     1,
		"TYPE_ISSUE_COMMENT_CREATE":                             2,
		"TYPE_ISSUE_FIELD_UPDATE":                               3,
		"TYPE_ISSUE_STATUS_UPDATE":                              4,
		"TYPE_ISSUE_PIPELINE_STAGE_STATUS_UPDATE":               5,
		"TYPE_ISSUE_PIPELINE_TASK_STATUS_UPDATE":                6,
		"TYPE_ISSUE_PIPELINE_TASK_FILE_COMMIT":                  7,
		"TYPE_ISSUE_PIPELINE_TASK_STATEMENT_UPDATE":             8,
		"TYPE_ISSUE_PIPELINE_TASK_EARLIEST_ALLOWED_TIME_UPDATE": 9,
		"TYPE_MEMBER_CREATE":                                    10,
		"TYPE_MEMBER_ROLE_UPDATE":                               11,
		"TYPE_MEMBER_ACTIVATE":                                  12,
		"TYPE_MEMBER_DEACTIVATE":                                13,
		"TYPE_PROJECT_REPOSITORY_PUSH":                          14,
		"TYPE_PROJECT_DATABASE_TRANSFER":                        15,
		"TYPE_PROJECT_MEMBER_CREATE":                            16,
		"TYPE_PROJECT_MEMBER_DELETE":                            17,
		"TYPE_PROJECT_MEMBER_ROLE_UPDATE":                       18,
		"TYPE_SQL_EDITOR_QUERY":                                 19,
		"TYPE_DATABASE_RECOVERY_PITR_DONE":                      20,
	}
)

func (x Activity_Type) Enum() *Activity_Type {
	p := new(Activity_Type)
	*p = x
	return p
}

func (x Activity_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Activity_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_activity_service_proto_enumTypes[0].Descriptor()
}

func (Activity_Type) Type() protoreflect.EnumType {
	return &file_v1_activity_service_proto_enumTypes[0]
}

func (x Activity_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Activity_Type.Descriptor instead.
func (Activity_Type) EnumDescriptor() ([]byte, []int) {
	return file_v1_activity_service_proto_rawDescGZIP(), []int{0, 0}
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_activity_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_v1_activity_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_v1_activity_service_proto_rawDescGZIP(), []int{0}
}

var File_v1_activity_service_proto protoreflect.FileDescriptor

var file_v1_activity_service_proto_rawDesc = []byte{
	0x0a, 0x19, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x62, 0x79, 0x74,
	0x65, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x22, 0xde, 0x05, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x22, 0xd1,
	0x05, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x15, 0x0a,
	0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53,
	0x55, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55,
	0x45, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03,
	0x12, 0x1c, 0x0a, 0x18, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x04, 0x12, 0x2b,
	0x0a, 0x27, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x50, 0x49, 0x50,
	0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x2a, 0x0a, 0x26, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49,
	0x4e, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55,
	0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x28, 0x0a, 0x24, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54,
	0x41, 0x53, 0x4b, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x49, 0x54, 0x10,
	0x07, 0x12, 0x2d, 0x0a, 0x29, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f,
	0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x08,
	0x12, 0x39, 0x0a, 0x35, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x5f, 0x50,
	0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x54, 0x41, 0x53, 0x4b, 0x5f, 0x45, 0x41, 0x52,
	0x4c, 0x49, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x09, 0x12, 0x16, 0x0a, 0x12, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54,
	0x45, 0x10, 0x0a, 0x12, 0x1b, 0x0a, 0x17, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42,
	0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x0b,
	0x12, 0x18, 0x0a, 0x14, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x41, 0x54, 0x45, 0x10, 0x0c, 0x12, 0x1a, 0x0a, 0x16, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x41, 0x43, 0x54, 0x49,
	0x56, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50,
	0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x52, 0x45, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x4f, 0x52,
	0x59, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x10, 0x0e, 0x12, 0x22, 0x0a, 0x1e, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53,
	0x45, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x0f, 0x12, 0x1e, 0x0a, 0x1a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x10, 0x12, 0x1e, 0x0a, 0x1a,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x11, 0x12, 0x23, 0x0a, 0x1f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x4d, 0x45, 0x4d,
	0x42, 0x45, 0x52, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10,
	0x12, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x51, 0x4c, 0x5f, 0x45, 0x44,
	0x49, 0x54, 0x4f, 0x52, 0x5f, 0x51, 0x55, 0x45, 0x52, 0x59, 0x10, 0x13, 0x12, 0x24, 0x0a, 0x20,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x50, 0x49, 0x54, 0x52, 0x5f, 0x44, 0x4f, 0x4e, 0x45,
	0x10, 0x14, 0x42, 0x11, 0x5a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d,
	0x67, 0x6f, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_activity_service_proto_rawDescOnce sync.Once
	file_v1_activity_service_proto_rawDescData = file_v1_activity_service_proto_rawDesc
)

func file_v1_activity_service_proto_rawDescGZIP() []byte {
	file_v1_activity_service_proto_rawDescOnce.Do(func() {
		file_v1_activity_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_activity_service_proto_rawDescData)
	})
	return file_v1_activity_service_proto_rawDescData
}

var file_v1_activity_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_v1_activity_service_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_v1_activity_service_proto_goTypes = []interface{}{
	(Activity_Type)(0), // 0: bytebase.v1.activity.Activity.Type
	(*Activity)(nil),   // 1: bytebase.v1.activity.Activity
}
var file_v1_activity_service_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_v1_activity_service_proto_init() }
func file_v1_activity_service_proto_init() {
	if File_v1_activity_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_activity_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_activity_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_activity_service_proto_goTypes,
		DependencyIndexes: file_v1_activity_service_proto_depIdxs,
		EnumInfos:         file_v1_activity_service_proto_enumTypes,
		MessageInfos:      file_v1_activity_service_proto_msgTypes,
	}.Build()
	File_v1_activity_service_proto = out.File
	file_v1_activity_service_proto_rawDesc = nil
	file_v1_activity_service_proto_goTypes = nil
	file_v1_activity_service_proto_depIdxs = nil
}
