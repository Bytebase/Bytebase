// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: v1/approval_template_service.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	ApprovalTemplateService_ListApprovalTemplates_FullMethodName = "/bytebase.v1.ApprovalTemplateService/ListApprovalTemplates"
	ApprovalTemplateService_SetApprovalTemplates_FullMethodName  = "/bytebase.v1.ApprovalTemplateService/SetApprovalTemplates"
)

// ApprovalTemplateServiceClient is the client API for ApprovalTemplateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type ApprovalTemplateServiceClient interface {
	ListApprovalTemplates(ctx context.Context, in *ListApprovalTemplatesRequest, opts ...grpc.CallOption) (*ListApprovalTemplatesResponse, error)
	SetApprovalTemplates(ctx context.Context, in *SetApprovalTemplatesRequest, opts ...grpc.CallOption) (*SetApprovalTemplatesResponse, error)
}

type approvalTemplateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewApprovalTemplateServiceClient(cc grpc.ClientConnInterface) ApprovalTemplateServiceClient {
	return &approvalTemplateServiceClient{cc}
}

func (c *approvalTemplateServiceClient) ListApprovalTemplates(ctx context.Context, in *ListApprovalTemplatesRequest, opts ...grpc.CallOption) (*ListApprovalTemplatesResponse, error) {
	out := new(ListApprovalTemplatesResponse)
	err := c.cc.Invoke(ctx, ApprovalTemplateService_ListApprovalTemplates_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *approvalTemplateServiceClient) SetApprovalTemplates(ctx context.Context, in *SetApprovalTemplatesRequest, opts ...grpc.CallOption) (*SetApprovalTemplatesResponse, error) {
	out := new(SetApprovalTemplatesResponse)
	err := c.cc.Invoke(ctx, ApprovalTemplateService_SetApprovalTemplates_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApprovalTemplateServiceServer is the server API for ApprovalTemplateService service.
// All implementations must embed UnimplementedApprovalTemplateServiceServer
// for forward compatibility
type ApprovalTemplateServiceServer interface {
	ListApprovalTemplates(context.Context, *ListApprovalTemplatesRequest) (*ListApprovalTemplatesResponse, error)
	SetApprovalTemplates(context.Context, *SetApprovalTemplatesRequest) (*SetApprovalTemplatesResponse, error)
	mustEmbedUnimplementedApprovalTemplateServiceServer()
}

// UnimplementedApprovalTemplateServiceServer must be embedded to have forward compatible implementations.
type UnimplementedApprovalTemplateServiceServer struct {
}

func (UnimplementedApprovalTemplateServiceServer) ListApprovalTemplates(context.Context, *ListApprovalTemplatesRequest) (*ListApprovalTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListApprovalTemplates not implemented")
}
func (UnimplementedApprovalTemplateServiceServer) SetApprovalTemplates(context.Context, *SetApprovalTemplatesRequest) (*SetApprovalTemplatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetApprovalTemplates not implemented")
}
func (UnimplementedApprovalTemplateServiceServer) mustEmbedUnimplementedApprovalTemplateServiceServer() {
}

// UnsafeApprovalTemplateServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ApprovalTemplateServiceServer will
// result in compilation errors.
type UnsafeApprovalTemplateServiceServer interface {
	mustEmbedUnimplementedApprovalTemplateServiceServer()
}

func RegisterApprovalTemplateServiceServer(s grpc.ServiceRegistrar, srv ApprovalTemplateServiceServer) {
	s.RegisterService(&ApprovalTemplateService_ServiceDesc, srv)
}

func _ApprovalTemplateService_ListApprovalTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListApprovalTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalTemplateServiceServer).ListApprovalTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApprovalTemplateService_ListApprovalTemplates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalTemplateServiceServer).ListApprovalTemplates(ctx, req.(*ListApprovalTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApprovalTemplateService_SetApprovalTemplates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetApprovalTemplatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApprovalTemplateServiceServer).SetApprovalTemplates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ApprovalTemplateService_SetApprovalTemplates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApprovalTemplateServiceServer).SetApprovalTemplates(ctx, req.(*SetApprovalTemplatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ApprovalTemplateService_ServiceDesc is the grpc.ServiceDesc for ApprovalTemplateService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ApprovalTemplateService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bytebase.v1.ApprovalTemplateService",
	HandlerType: (*ApprovalTemplateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApprovalTemplates",
			Handler:    _ApprovalTemplateService_ListApprovalTemplates_Handler,
		},
		{
			MethodName: "SetApprovalTemplates",
			Handler:    _ApprovalTemplateService_SetApprovalTemplates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/approval_template_service.proto",
}
