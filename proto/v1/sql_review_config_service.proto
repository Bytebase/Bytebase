syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "v1/org_policy_service.proto";

option go_package = "generated-go/v1";

service SQLReviewService {
  rpc CreateSQLReviewConfig(CreateSQLReviewConfigRequest) returns (SQLReviewConfig) {
    option (google.api.http) = {
      post: "/v1/sqlReviewConfigs"
      body: "sql_review_config"
    };
    option (google.api.method_signature) = "";
  }

  rpc ListSQLReviewConfigs(ListSQLReviewConfigsRequest) returns (ListSQLReviewConfigsResponse) {
    option (google.api.http) = {get: "/v1/sqlReviewConfigs"};
    option (google.api.method_signature) = "";
  }

  rpc GetSQLReviewConfig(GetSQLReviewConfigRequest) returns (SQLReviewConfig) {
    option (google.api.http) = {get: "/v1/{name=sqlReviewConfigs/*}"};
    option (google.api.method_signature) = "name";
  }

  rpc UpdateSQLReviewConfig(UpdateSQLReviewConfigRequest) returns (SQLReviewConfig) {
    option (google.api.http) = {
      patch: "/v1/{sql_review_config.name=sqlReviewConfigs/*}"
      body: "sql_review_config"
    };
    option (google.api.method_signature) = "sql_review_config,update_mask";
  }

  rpc DeleteSQLReviewConfig(DeleteSQLReviewConfigRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1/{name=sqlReviewConfigs/*}"};
    option (google.api.method_signature) = "name";
  }
}

message ListSQLReviewConfigsRequest {
  // The maximum number of sql review to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 sql review will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 1;

  // A page token, provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListSQLReviews` must match
  // the call that provided the page token.
  string page_token = 2;
}

message ListSQLReviewConfigsResponse {
  // The sql review from the specified request.
  repeated SQLReviewConfig sql_review_configs = 1;

  // A token, which can be sent as `page_token` to retrieve the next page.
  // If this field is omitted, there are no subsequent pages.
  string next_page_token = 2;
}

message CreateSQLReviewConfigRequest {
  // The sql review to create.
  SQLReviewConfig sql_review_config = 1 [(google.api.field_behavior) = REQUIRED];
}

message UpdateSQLReviewConfigRequest {
  // The sql review toupdate.
  //
  // The name field is used to identify the sql review to update.
  SQLReviewConfig sql_review_config = 1 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  google.protobuf.FieldMask update_mask = 2;
}

message GetSQLReviewConfigRequest {
  // The name of the sql review to retrieve.
  // Format: sqlReviewConfigs/{uid}
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message DeleteSQLReviewConfigRequest {
  // The name of the sql review to delete.
  // Format: sqlReviewConfigs/{uid}
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message SQLReviewConfig {
  // The name of the sql review to retrieve.
  // Format: sqlReviewConfigs/{uid}
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  string title = 2;

  bool enabled = 3;

  // Format: users/hello@world.com
  string creator = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  google.protobuf.Timestamp create_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  google.protobuf.Timestamp update_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  repeated SQLReviewRule rules = 7;
}
