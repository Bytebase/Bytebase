syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/expr/v1alpha1/syntax.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";

option go_package = "generated-go/v1";

service ReviewService {
  rpc GetReview(GetReviewRequest) returns (Review) {
    option (google.api.http) = {get: "/v1/{name=issues/*/review}"};
  }
  rpc ApproveReview(ApproveReviewRequest) returns (Review) {
    option (google.api.http) = {
      post: "/v1/{name=issues/*/review}:approve"
      body: "*"
    };
  }
}

message Review {
  message Approver {
    enum Status {
      STATUS_UNSPECIFIED = 0;
      PENDING = 1;
      APPROVED = 2;
    }
    // The new status.
    Status status = 1;

    // Format: user:hello@world.com
    string principal = 2;
  }

  repeated ApprovalTemplate approval_templates = 1;
  repeated Approver approvers = 2;
}

message GetReviewRequest {
  // Format: issues/{issue}/review
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ApproveReviewRequest {
  // The name of the review to add an approver.
  // Format: issues/{issue}/review
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ApprovalTemplate {
  ApprovalFlow flow = 1;
  string title = 2;
  string description = 3;
}

message ApprovalFlow {
  repeated ApprovalStep steps = 1;
}

message ApprovalStep {
  // Type of the ApprovalStep
  // ALL means every node must be approved to proceed.
  // ANY means approving any node will proceed.
  enum Type {
    TYPE_UNSPECIFIED = 0;
    ALL = 1;
    ANY = 2;
  }
  Type type = 1;

  repeated ApprovalNode nodes = 2;
}

message ApprovalNode {
  // Type of the ApprovalNode.
  // type determines who should approve this node.
  // ANY_IN_GROUP means the ApprovalNode can be approved by an user from our predefined user group.
  // See GroupValue below for the predefined user groups.
  enum Type {
    TYPE_UNSPECIFIED = 0;
    ANY_IN_GROUP = 1;
  }
  Type type = 1;

  // GroupValue is used if ApprovalNode Type is ANY_IN_GROUP
  // The predefined user groups are:
  // - WORKSPACE_OWNER
  // - WORKSPACE_DBA
  // - PROJECT_OWNER
  // - PROJECT_MEMBER
  enum GroupValue {
    GROUP_VALUE_UNSPECIFILED = 0;
    WORKSPACE_OWNER = 1;
    WORKSPACE_DBA = 2;
    PROJECT_OWNER = 3;
    PROJECT_MEMBER = 4;
  }
  oneof payload {
    GroupValue group_value = 2;
  }
}
