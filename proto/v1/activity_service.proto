syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

import "v1/common.proto";

option go_package = "generated-go/v1";

service ActivityService {
  rpc CreateActivity(CreateActivityRequest) returns (Activity) {
  // We only allow create the activity which type is ACTION_ISSUE_COMMENT_CREATE.
  // So using {parent=projects/*} is enough for now.
  option (google.api.http) = {
    post: "/v1/{parent=projects/*}/activities"
    body: "activity"
  };
  option (google.api.method_signature) = "parent,activity";
  }

  rpc UpdateActivity(UpdateActivityRequest) returns (Activity) {
  // We only allow update the activity which type is ACTION_ISSUE_COMMENT_CREATE.
  // So using {parent=projects/*} is enough for now.
  option (google.api.http) = {
    patch: "/v1/{parent=projects/*/issues/*}/activities"
    body: "activity"
  };
  option (google.api.method_signature) = "parent,activity";
  }

  rpc SearchActivities(SearchActivitiesRequest) returns (SearchActivitiesResponse) {
  option (google.api.http) = {
    post: "/v1/{parent=projects/*}/activities"
    additional_bindings: {
      post: "/v1/{parent=workspaces/*}/activities"
    }
  };
  option (google.api.method_signature) = "parent";
  }
}

message CreateActivityRequest {
  // The parent resource name.
  // Format:
  // projects/{project}/activities
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // The activity to create.
  // The type must be ACTION_ISSUE_COMMENT_CREATE for now.
  Activity activity = 2 [(google.api.field_behavior) = REQUIRED];
}

message UpdateActivityRequest {
  // The parent resource name.
  // Format:
  // projects/{project}/issues/{issue}/activities
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // The activity to update.
  // The type must be ACTION_ISSUE_COMMENT_CREATE for now.
  Activity activity = 2 [(google.api.field_behavior) = REQUIRED];
}

message SearchActivitiesRequest {
  // The parent resource name.
  // Format:
  // projects/{project}/activities
  // workspaces/{workspace}/activities
  string parent = 1 [(google.api.field_behavior) = REQUIRED];

  // filter is the filter to apply on the search activities request,
  // follow the [ebnf](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form) syntax.
  // The field only support in filter:
  // - creator
  // - container
  // - level
  // - action
  // For example:
  // Search the activities of type 'ACTION_ISSUE_COMMENT_CREATE' in issue/123: 'action="ACTION_ISSUE_COMMENT_CREATE", container="issue/123"'
  string filter = 2;

  // Not used. The maximum number of activities to return.
  // The service may return fewer than this value.
  // If unspecified, at most 100 activities will be returned.
  // The maximum value is 1000; values above 1000 will be coerced to 1000.
  int32 page_size = 3;

  // Not used. A page token, received from a previous `ListActivities` call.
  // Provide this to retrieve the subsequent page.
  string page_token = 4;
}

message SearchActivitiesResponse {
  // The list of activities.
  repeated Activity activities= 1;

  // A token to retrieve next page of activities.
  // Pass this value in the page_token field in the subsequent call to `ListActivities` method
  // to retrieve the next page of activities.
  string next_page_token = 2;
}

message Activity {
  // The name of the activity, which is the unqiue identifier.
  // Generated by the server.
  // Format:
  // workspaces/{workspace}/activities/{activity}
  // projects/{projects}/activities/{activity}
  string name = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The creator of the activity.
  // Format: user:{emailid}
  string creator = 2 [(google.api.field_behavior) = REQUIRED];

  // The timestamp when the backup resource was created initally.
  google.protobuf.Timestamp create_time = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The timestamp when the backup resource was updated.
  google.protobuf.Timestamp update_time = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  enum Action {
    ACTION_UNSPECIFIED = 0;
    // In worksapce resource only.
    //
    // ACTION_MEMBER_CREATE is the type for creating a new member.
    ACTION_MEMBER_CREATE = 1;
    // ACTION_MEMBER_ROLE_UPDATE is the type for updating a member's role.
    ACTION_MEMBER_ROLE_UPDATE = 2;
    // ACTION_MEMBER_ACTIVATE_UPDATE is the type for activating members.
    ACTION_MEMBER_ACTIVATE = 3;
    // ACTION_MEMBER_DEACTIVE is the type for deactiving members.
    ACTION_MEMBER_DEACTIVE = 4;

    // In project resource only.
    //
    // ACTION_ISSUE_CREATE is the type for creating a new issue.
    ACTION_ISSUE_CREATE = 5;
    // ACTION_ISSUE_COMMENT_CREATE is the type for creating a new comment on an issue.
    ACTION_ISSUE_COMMENT_CREATE = 6;
    // ACTION_ISSUE_FIELD_UPDATE is the type for updating an issue's field.
    ACTION_ISSUE_FIELD_UPDATE = 7;
    // ACTION_ISSUE_STATUS_UPDATE is the type for updating an issue's status.
    ACTION_ISSUE_STATUS_UPDATE = 8;

    // ACTION_PIPELINE_STAGE_STATUS_UPDATE is the type for stage begins or ends.
    ACTION_PIPELINE_STAGE_STATUS_UPDATE = 9;
    // ACTION_PIPELINE_TASK_STATUS_UPDATE is the type for updating pipeline task status.
    ACTION_PIPELINE_TASK_STATUS_UPDATE = 10;
    // ACTION_PIPELINE_TASK_FILE_COMMIT is the type for committing pipeline task files.
    ACTION_PIPELINE_TASK_FILE_COMMIT = 11;
    // ACTION_PIPELINE_TASK_STATEMENT_UPDATE is the type for updating pipeline task SQL statement.
    ACTION_PIPELINE_TASK_STATEMENT_UPDATE = 12;
    // ACTION_PIPELINE_TASK_EARLIEST_ALLOWED_DATE_UPDATE is the type for updating pipeline task the earliest allowed time.
    ACITON_PIPELINE_TASK_EARLIEST_ALLOWED_DATE_UPDATE = 13;

    // ACTION_PROJECT_MEMBER_CREATE is the type for creating a new project member.
    ACTION_PROJECT_MEMBER_CREATE = 14;
    // ACTION_PROJECT_MEMBER_ROLE_UPDATE is the type for updating a project member's role.
    ACTION_PROJECT_MEMBER_ROLE_UPDATE = 15;
    // ACTION_PROJECT_MEMBER_DELETE is the type for deleting a project member.
    ACTION_PROJECT_MEMBER_DELETE = 16;

    // ACTION_PROJECT_REPOSITORY_PUSH is the type for pushing to a project repository.
    ACTION_PROJECT_REPOSITORY_PUSH = 17;

    // ACTION_PROJECT_DATABASE_TRANSFER is the type for transferring a database to a project.
    ACTION_PROJECT_DTABASE_TRANSFER = 18;
    
    // ACTION_PROJECT_DATABASE_RECOVERY_PITR_DONE is the type for database PITR recovery done.
    ACTION_PROJECT_DATABASE_RECOVERY_PITR_DONE = 19;

    // Both in workspace and project resource.
    //
    // ACTION_SQL_EDITOR_QUERY is the type for SQL editor query.
    // If user runs SQL in Read-only mode, this action will belong to project resource.
    // If user runs SQL in Read-write mode, this action will belong to workspace resource.
    ACTION_SQL_EDITOR_QUERY = 20;
  }
  Action action = 5 [(google.api.field_behavior) = REQUIRED];

  enum Level {
    LEVEL_UNSPECIFIED = 0;
    // LEVEL_INFO is the type for information.
    LEVEL_INFO = 1;
    // LEVEL_WARNING is the type for warning.
    LEVEL_WARNING = 2;
    // LEVEL_ERROR is the type for error.
    LEVEL_ERROR = 3;
  }
  Level level = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The container of the activity.
  // Format:
  // For ACTION_MEMBER_*: user:emailid
  // For ACTION_ISSUE_*: issues/{issue}
  // For ACTION_PIPELINE_*: pipelines/{pipeline}
  // For ACTION_PROJECT_*: projects/{project}
  // For ACTION_SQL_EDITOR_QUERY: workspaces/{workspace} OR projects/{project}
  string container = 7 [(google.api.field_behavior) = REQUIRED];

  string comment = 8;
  
  // The payload of the activity.
  google.protobuf.Struct json_payload = 9;
}