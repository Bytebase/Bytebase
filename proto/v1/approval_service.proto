syntax = "proto3";

package bytebase.v1;

option go_package = "generated-go/v1";

service ApprovalService {
}


message Approval {

}


message ApprovalFlow {
    repeated ApprovalStep steps = 1;
}

message ApprovalStep {
    // Type of the ApprovalStep
    // AND means every node must be approved to proceed.
    // OR means approving any node will proceed.
    enum Type {
        TYPE_UNSPECIFIED = 0;
        AND = 1;
        OR = 2;
    }
    Type type = 1;
    repeated ApprovalNode nodes = 2;
}

message ApprovalNode {
    // Status of the ApprovalNode.
    enum Status {
        STATUS_UNSPECIFIED = 0;
        PENDING = 1;
        APPROVED = 2;
    }
    // Type of the ApprovalNode.
    // ROLE means the ApprovalNode can be approved by an user from our predefined user group.
    // See RoleValue below for the predefined user groups.
    enum Type {
        TYPE_UNSPECIFIED = 0;
        ROLE = 1;
    }
    // RoleValue is used if ApprovalNode Type is ROLE
    // The predefined user groups are:
    // - WORKSPACE_OWNER
    // - DBA
    // - PROJECT_OWNER
    // - PROJECT_MEMBER
    enum RoleValue {
        ROLE_VALUE_UNSPECIFILED = 0;
        WORKSPACE_OWNER = 1;
        DBA = 2;
        PROJECT_OWNER = 3;
        PROJECT_MEMBER = 4;
    }
    message RolePayload {
        RoleValue role_value = 1;
    }

    // id is a unique identifier of a node in a flow.
    string id = 1;
    // stauts of the node.
    Status status = 2;
    // type determines who should approve this node.
    Type type = 3;
    oneof payload {
        RolePayload role_payload = 4;
    }
}


message ApprovalTemplate {

}