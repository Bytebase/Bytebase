syntax = "proto3";

package bytebase.v1;

import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/api/expr/v1alpha1/syntax.proto";

import "v1/common.proto";

option go_package = "generated-go/v1";

service RiskService {
    rpc GetRisk(GetRiskRequest) returns (Risk) {
        option (google.api.http) = {
            get: "/v1/{name=risks/*}"
        };
        option (google.api.method_signature) = "name";
    }
    rpc ListRisks(ListRisksRequest) returns (ListRisksResponse) {
        option (google.api.http) = {
            get: "/v1/risks"
        };
        option (google.api.method_signature) = "";
    }

    rpc AddRiskCondition(AddRiskConditionRequest) returns (Risk) {
        option (google.api.http) = {
            post: "/v1/{risk=risks/*}:addRiskCondition"
            body: "*"
        };
    }

    rpc RemoveRiskCondition() returns (Risk) {

    }

    rpc UpdateRiskCondition() returns (Risk) {
        
    }

}

message GetRiskRequest {
    // The name of the risk to retrieve.
    // Format: risks/{risk}
    string name = 1 [(google.api.field_behavior) = REQUIRED];
}

message ListRisksRequest {
    // The maximum number of risks to return. The service may return fewer than
    // this value.
    // If unspecified, at most 50 risks will be returned.
    // The maximum value is 1000; values above 1000 will be coerced to 1000.
    int32 page_size = 1;

    // A page token, received from a previous `ListRisks` call.
    // Provide this to retrieve the subsequent page.
    //
    // When paginating, all other parameters provided to `LiskRisks` must match
    // the call that provided the page token.
    string page_token = 2;

    // Show deleted risks if specified.
    bool show_deleted = 3;
}

message ListRisksResponse {
    repeated Risk risks = 1;

    // A token, which can be sent as `page_token` to retrieve the next page.
    // If this field is omitted, there are no subsequent pages.
    string next_page_token = 2;
}

message AddRiskConditionRequest {

}

message Risk {
    // Format: risks/{risk}
    string name = 1;
    // system-generated unique identifier.
    string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    string title = 3;
    string description = 4;
    int32 level = 5;
    repeated RiskAction actions = 6;
    repeated RiskCondition conditions = 7;
}

message RiskAction {
    enum Type {
        TYPE_UNSPECIFIED = 0;
        CHOOSE_APPROVAL_TEMPLATE = 1;
    }
    Type type = 1;
    oneof payload {
        // Format: approvalTemplates/{approval_template}
        string approval_template = 2;
    }
}

message RiskCondition {
    // Format: risks/{risk}/riskConditions/{risk_condition}
    string name = 1;
    string uid = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
    string title = 3;
    string description = 4;
    google.api.expr.v1alpha1.ParsedExpr expression = 5;
}