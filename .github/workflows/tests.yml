name: Test

on:
  schedule:
    - cron: "*/30 * * * *"
  push:
    branches:
      - main
      - "release/*.*.*"
  pull_request:

jobs:
  go-tests:
    strategy:
      matrix:
        release-tags:
          - "release,mysql"
          - "mysql"
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.18
          check-latest: true
          cache: true
      - name: Cache MySQL
        uses: actions/cache@v3
        with:
          path: |
            ./resources/mysql/*.tar.gz
            ./resources/mysql/*.tar.xz
          key: ${{ runner.OS }}-build-mysql-cache
      # Release mode needs to embed frontend dist
      - name: Touch garbage dist/index.html
        if: ${{ matrix.release-tags == 'release,mysql' }}
        run: |
          mkdir -p server/dist
          touch server/dist/index.html
      - name: Install dependencies
        run: go generate -tags ${{ matrix.release-tags }} ./...
      - name: Run all tests
        run: go test -v -run ^TestPITR$ github.com/bytebase/bytebase/tests -tags=${{ matrix.release-tags }} | tee test.log; exit ${PIPESTATUS[0]}
      - name: Pretty print tests running time
        # grep: filter out lines like "--- PASS: TestVCS (15.04s)"
        # sed: remove unnecessary characters
        # awk: re-format lines to "PASS: TestVCS (15.04s)"
        # sort: cut into columns by delimiter ' ' (single space) and sort by column 3 (test time in seconds) as numeric type in reverse order (largest comes first)
        # awk: accumulate sum by test time in seconds
        run: grep --color=never -e '--- PASS:' -e '--- FAIL:' test.log | sed 's/[:()]//g' | awk '{print $2,$3,$4}' | sort -t' ' -nk3 -r | awk '{sum += $3; print $1,$2,$3,sum"s"}'
